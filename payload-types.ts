/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    blogs: Blog;
    tags: Tag;
    media: Media;
    users: User;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    orders: Order;
    products: Product;
    subscriptionPlans: SubscriptionPlan;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    subscriptionPlans: SubscriptionPlansSelect<false> | SubscriptionPlansSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout?:
    | (
        | AboutType
        | AdvertiseType
        | HeroType
        | SkillsType
        | ServiceType
        | HeadlineType
        | RecentWorkType
        | TestimonialType
        | TeamType
        | ServiceBannerType
        | ServiceFeaturesType
        | WorkProcessType
        | BannerType
        | OurClientsType
        | StatisticsType
        | TeamInfoType
        | VideoAreaType
        | ListType
        | DetailsType
        | ContactType
        | PageBannerType
        | PricingFeaturesType
        | PricingSectionType
        | FormType
        | DisqusCommentsType
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  isHome?: boolean | null;
  isDynamic?: boolean | null;
  slugMode?: ('generate' | 'custom') | null;
  slug?: string | null;
  pathMode?: ('generate' | 'custom') | null;
  path?: string | null;
  parent?: (number | null) | Page;
  breadcrumbs?:
    | {
        doc?: (number | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutType".
 */
export interface AboutType {
  badge_title?: string | null;
  title?: string | null;
  description?: string | null;
  percentages?:
    | {
        percentage?: number | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  about_image?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'About';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize2?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize3?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdvertiseType".
 */
export interface AdvertiseType {
  title: string;
  banner_image: number | Media;
  project_completion_count?: string | null;
  completion_status?: string | null;
  description?: string | null;
  clients?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  client_description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Advertise';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroType".
 */
export interface HeroType {
  title: string;
  description?: string | null;
  clients?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  client_description?: string | null;
  hero_image: number | Media;
  badge_title?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SkillsType".
 */
export interface SkillsType {
  title: string;
  skills?:
    | {
        skill_image: number | Media;
        skill_title: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Skills';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceType".
 */
export interface ServiceType {
  badge_title?: string | null;
  title?: string | null;
  services?:
    | {
        service_icon?:
          | (
              | 'flaticon-development'
              | 'flaticon-mobile-development'
              | 'flaticon-brainstorming'
              | 'flaticon-abstract'
              | 'flaticon-ux'
              | 'flaticon-optimization'
              | 'flaticon-goal'
            )
          | null;
        title?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Service';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeadlineType".
 */
export interface HeadlineType {
  headlines?:
    | {
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Headline';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecentWorkType".
 */
export interface RecentWorkType {
  badge_title?: string | null;
  title?: string | null;
  recent_works?:
    | {
        title?: string | null;
        url?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'RecentWork';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialType".
 */
export interface TestimonialType {
  image?: (number | null) | Media;
  testimonials?:
    | {
        reviewer_name?: string | null;
        review?: string | null;
        reviewer_image?: (number | null) | Media;
        reviewer_role?: string | null;
        rating?: number | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Testimonial';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamType".
 */
export interface TeamType {
  badge_title?: string | null;
  title?: string | null;
  team_members?:
    | {
        image?: (number | null) | Media;
        name?: string | null;
        role?: string | null;
        social_media?:
          | {
              icon?:
                | (
                    | 'fab fa-facebook-f'
                    | 'fab fa-instagram'
                    | 'fab fa-whatsapp'
                    | 'fab fa-twitter'
                    | 'fab fa-linkedin-in'
                  )
                | null;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Team';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceBannerType".
 */
export interface ServiceBannerType {
  title: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ServiceBanner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceFeaturesType".
 */
export interface ServiceFeaturesType {
  features?:
    | {
        title?: string | null;
        url?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ServiceFeatures';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkProcessType".
 */
export interface WorkProcessType {
  steps?:
    | {
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'WorkProcess';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerType".
 */
export interface BannerType {
  title?: string | null;
  banner_image1?: (number | null) | Media;
  banner_image2?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OurClientsType".
 */
export interface OurClientsType {
  title?: string | null;
  clients?:
    | {
        client_logo?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'OurClients';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatisticsType".
 */
export interface StatisticsType {
  statistics?:
    | {
        number?: number | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Statistics';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamInfoType".
 */
export interface TeamInfoType {
  caption?: string | null;
  title?: string | null;
  features?:
    | {
        title?: string | null;
        description?: string | null;
        icon?: ('flaticon-creativity' | 'flaticon-mobile-banking' | 'flaticon-optimization-1') | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'TeamInfo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoAreaType".
 */
export interface VideoAreaType {
  video_image?: (number | null) | Media;
  video_link?: string | null;
  description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'VideoArea';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListType".
 */
export interface ListType {
  title?: string | null;
  description?: string | null;
  collectionSlug?: ('blogs' | 'tags' | 'users' | 'products') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'List';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DetailsType".
 */
export interface DetailsType {
  collectionSlug?: ('blogs' | 'tags' | 'users') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Details';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactType".
 */
export interface ContactType {
  sub_title?: string | null;
  title?: string | null;
  background_text?: string | null;
  button_text?: string | null;
  button_url?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Contact';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageBannerType".
 */
export interface PageBannerType {
  page_name: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'PageBanner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingFeaturesType".
 */
export interface PricingFeaturesType {
  sub_title?: string | null;
  title?: string | null;
  datails?:
    | {
        heading?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  button_text?: string | null;
  button_path?: string | null;
  features?:
    | {
        icons?: ('fa-bezier-curve' | 'fa-cogs' | 'fa-chart-pie' | 'fa-shield-cross') | null;
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'PricingFeatures';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingSectionType".
 */
export interface PricingSectionType {
  title?: string | null;
  sub_title?: string | null;
  pricing?:
    | {
        icons?: ('flaticon-abstract' | 'flaticon-liquid' | 'flaticon-petals') | null;
        package_title?: string | null;
        price?: number | null;
        price_text?: string | null;
        available_features?:
          | {
              feature?: string | null;
              id?: string | null;
            }[]
          | null;
        button_text?: string | null;
        button_url?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'PricingSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormType".
 */
export interface FormType {
  title: string;
  form: {
    relationTo: 'forms';
    value: number | Form;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'FormBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DisqusCommentsType".
 */
export interface DisqusCommentsType {
  title?: string | null;
  shortName: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'DisqusComments';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: number;
  blogImage: number | Media;
  title: string;
  description: string;
  tags?:
    | {
        relationTo: 'tags';
        value: number | Tag;
      }[]
    | null;
  author?:
    | {
        relationTo: 'users';
        value: number | User;
      }[]
    | null;
  content: {
    [k: string]: unknown;
  }[];
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  slug?: string | null;
  publishOn?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  tagImage: number | Media;
  title: string;
  description: string;
  color?: ('blue' | 'gray' | 'red' | 'green' | 'yellow' | 'indigo' | 'purple' | 'pink') | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  displayName?: string | null;
  username: string;
  imageUrl?: (number | null) | Media;
  role: ('admin' | 'author' | 'user')[];
  emailVerified?: string | null;
  socialLinks?:
    | {
        platform:
          | 'website'
          | 'facebook'
          | 'instagram'
          | 'twitter'
          | 'linkedin'
          | 'youtube'
          | 'tiktok'
          | 'pinterest'
          | 'snapchat'
          | 'reddit'
          | 'tumblr'
          | 'whatsapp'
          | 'telegram'
          | 'github'
          | 'medium'
          | 'quora'
          | 'discord';
        value: string;
        id?: string | null;
      }[]
    | null;
  stripe_customer_code?: string | null;
  stripe_user_id?: string | null;
  stripe_express_dashboard_url?: string | null;
  user_plan?: ('free' | 'premium') | null;
  stripe_subscription_id?: string | null;
  last_billed_date?: string | null;
  plan_end_date?: string | null;
  subscription_status?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'blogs';
        value: number | Blog;
      }
    | {
        relationTo: 'tags';
        value: number | Tag;
      }
    | {
        relationTo: 'users';
        value: number | User;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  user?: (number | null) | User;
  amount?: number | null;
  currency?: string | null;
  status?: string | null;
  invoiceId?: string | null;
  invoiceUrl?: string | null;
  invoicePdf?: string | null;
  products?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  userEmail?: string | null;
  paymentError?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  name: string;
  price: number;
  productImage: number | Media;
  description?: string | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptionPlans".
 */
export interface SubscriptionPlan {
  id: number;
  name: string;
  price: number;
  description?: string | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'blogs';
        value: number | Blog;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'subscriptionPlans';
        value: number | SubscriptionPlan;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        About?:
          | T
          | {
              badge_title?: T;
              title?: T;
              description?: T;
              percentages?:
                | T
                | {
                    percentage?: T;
                    title?: T;
                    id?: T;
                  };
              about_image?: T;
              id?: T;
              blockName?: T;
            };
        Advertise?:
          | T
          | {
              title?: T;
              banner_image?: T;
              project_completion_count?: T;
              completion_status?: T;
              description?: T;
              clients?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              client_description?: T;
              id?: T;
              blockName?: T;
            };
        Hero?:
          | T
          | {
              title?: T;
              description?: T;
              clients?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              client_description?: T;
              hero_image?: T;
              badge_title?: T;
              id?: T;
              blockName?: T;
            };
        Skills?:
          | T
          | {
              title?: T;
              skills?:
                | T
                | {
                    skill_image?: T;
                    skill_title?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Service?:
          | T
          | {
              badge_title?: T;
              title?: T;
              services?:
                | T
                | {
                    service_icon?: T;
                    title?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Headline?:
          | T
          | {
              headlines?:
                | T
                | {
                    title?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        RecentWork?:
          | T
          | {
              badge_title?: T;
              title?: T;
              recent_works?:
                | T
                | {
                    title?: T;
                    url?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Testimonial?:
          | T
          | {
              image?: T;
              testimonials?:
                | T
                | {
                    reviewer_name?: T;
                    review?: T;
                    reviewer_image?: T;
                    reviewer_role?: T;
                    rating?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Team?:
          | T
          | {
              badge_title?: T;
              title?: T;
              team_members?:
                | T
                | {
                    image?: T;
                    name?: T;
                    role?: T;
                    social_media?:
                      | T
                      | {
                          icon?: T;
                          url?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        ServiceBanner?:
          | T
          | {
              title?: T;
              id?: T;
              blockName?: T;
            };
        ServiceFeatures?:
          | T
          | {
              features?:
                | T
                | {
                    title?: T;
                    url?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        WorkProcess?:
          | T
          | {
              steps?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Banner?:
          | T
          | {
              title?: T;
              banner_image1?: T;
              banner_image2?: T;
              id?: T;
              blockName?: T;
            };
        OurClients?:
          | T
          | {
              title?: T;
              clients?:
                | T
                | {
                    client_logo?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        Statistics?:
          | T
          | {
              statistics?:
                | T
                | {
                    number?: T;
                    title?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        TeamInfo?:
          | T
          | {
              caption?: T;
              title?: T;
              features?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        VideoArea?:
          | T
          | {
              video_image?: T;
              video_link?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        List?:
          | T
          | {
              title?: T;
              description?: T;
              collectionSlug?: T;
              id?: T;
              blockName?: T;
            };
        Details?:
          | T
          | {
              collectionSlug?: T;
              id?: T;
              blockName?: T;
            };
        Contact?:
          | T
          | {
              sub_title?: T;
              title?: T;
              background_text?: T;
              button_text?: T;
              button_url?: T;
              id?: T;
              blockName?: T;
            };
        PageBanner?:
          | T
          | {
              page_name?: T;
              id?: T;
              blockName?: T;
            };
        PricingFeatures?:
          | T
          | {
              sub_title?: T;
              title?: T;
              datails?:
                | T
                | {
                    heading?: T;
                    description?: T;
                    id?: T;
                  };
              button_text?: T;
              button_path?: T;
              features?:
                | T
                | {
                    icons?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        PricingSection?:
          | T
          | {
              title?: T;
              sub_title?: T;
              pricing?:
                | T
                | {
                    icons?: T;
                    package_title?: T;
                    price?: T;
                    price_text?: T;
                    available_features?:
                      | T
                      | {
                          feature?: T;
                          id?: T;
                        };
                    button_text?: T;
                    button_url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        FormBlock?:
          | T
          | {
              title?: T;
              form?: T;
              id?: T;
              blockName?: T;
            };
        DisqusComments?:
          | T
          | {
              title?: T;
              shortName?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  isHome?: T;
  isDynamic?: T;
  slugMode?: T;
  slug?: T;
  pathMode?: T;
  path?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  blogImage?: T;
  title?: T;
  description?: T;
  tags?: T;
  author?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  publishOn?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  tagImage?: T;
  title?: T;
  description?: T;
  color?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize2?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize3?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  displayName?: T;
  username?: T;
  imageUrl?: T;
  role?: T;
  emailVerified?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        value?: T;
        id?: T;
      };
  stripe_customer_code?: T;
  stripe_user_id?: T;
  stripe_express_dashboard_url?: T;
  user_plan?: T;
  stripe_subscription_id?: T;
  last_billed_date?: T;
  plan_end_date?: T;
  subscription_status?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user?: T;
  amount?: T;
  currency?: T;
  status?: T;
  invoiceId?: T;
  invoiceUrl?: T;
  invoicePdf?: T;
  products?: T;
  userEmail?: T;
  paymentError?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  price?: T;
  productImage?: T;
  description?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptionPlans_select".
 */
export interface SubscriptionPlansSelect<T extends boolean = true> {
  name?: T;
  price?: T;
  description?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  general: {
    title: string;
    description: string;
    faviconUrl: number | Media;
    ogImageUrl: number | Media;
    keywords?: string[] | null;
  };
  navbar: {
    logo: BrandLogo;
    menuLinks?:
      | {
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            label: string;
            page?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  footer: {
    logo: BrandLogo;
    footerLinks?:
      | {
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            label: string;
            page?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          platform:
            | 'website'
            | 'facebook'
            | 'instagram'
            | 'twitter'
            | 'linkedin'
            | 'youtube'
            | 'tiktok'
            | 'pinterest'
            | 'snapchat'
            | 'reddit'
            | 'tumblr'
            | 'whatsapp'
            | 'telegram'
            | 'github'
            | 'medium'
            | 'quora'
            | 'discord';
          value: string;
          id?: string | null;
        }[]
      | null;
    copyright?: string | null;
  };
  redirectionLinks?: {
    blogLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    productLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    authorLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    tagLink?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
  };
  monetization?: {
    adSenseId?: string | null;
    measurementId?: string | null;
  };
  stripeConnect?: {
    country?:
      | (
          | 'AL'
          | 'DZ'
          | 'AO'
          | 'AG'
          | 'AR'
          | 'AM'
          | 'AU'
          | 'AT'
          | 'AZ'
          | 'BS'
          | 'BH'
          | 'BD'
          | 'BE'
          | 'BJ'
          | 'BT'
          | 'BO'
          | 'BA'
          | 'BW'
          | 'BN'
          | 'BG'
          | 'KH'
          | 'CA'
          | 'CL'
          | 'CO'
          | 'CR'
          | 'CI'
          | 'HR'
          | 'CY'
          | 'CZ'
          | 'DK'
          | 'DO'
          | 'EC'
          | 'EG'
          | 'SV'
          | 'EE'
          | 'ET'
          | 'FI'
          | 'FR'
          | 'GA'
          | 'GM'
          | 'DE'
          | 'GH'
          | 'GR'
          | 'GT'
          | 'GY'
          | 'HK'
          | 'HU'
          | 'IS'
          | 'IN'
          | 'ID'
          | 'IE'
          | 'IL'
          | 'IT'
          | 'JM'
          | 'JP'
          | 'JO'
          | 'KZ'
          | 'KE'
          | 'KW'
          | 'LA'
          | 'LV'
          | 'LI'
          | 'LT'
          | 'LU'
          | 'MO'
          | 'MG'
          | 'MY'
          | 'MT'
          | 'MU'
          | 'MX'
          | 'MD'
          | 'MC'
          | 'MN'
          | 'MA'
          | 'MZ'
          | 'NA'
          | 'NL'
          | 'NZ'
          | 'NE'
          | 'NG'
          | 'MK'
          | 'NO'
          | 'OM'
          | 'PK'
          | 'PA'
          | 'PY'
          | 'PE'
          | 'PH'
          | 'PL'
          | 'PT'
          | 'QA'
          | 'RO'
          | 'RW'
          | 'SM'
          | 'SA'
          | 'SN'
          | 'RS'
          | 'SG'
          | 'SK'
          | 'SI'
          | 'ZA'
          | 'KR'
          | 'ES'
          | 'LK'
          | 'LC'
          | 'SE'
          | 'CH'
          | 'TW'
          | 'TZ'
          | 'TH'
          | 'TT'
          | 'TN'
          | 'TR'
          | 'AE'
          | 'GB'
          | 'UY'
          | 'UZ'
          | 'VN'
        )
      | null;
    currency?:
      | (
          | 'usd'
          | 'eur'
          | 'inr'
          | 'gbp'
          | 'jpy'
          | 'cad'
          | 'aud'
          | 'chf'
          | 'cny'
          | 'hkd'
          | 'sgd'
          | 'mxn'
          | 'brl'
          | 'rub'
          | 'krw'
          | 'zar'
          | 'try'
          | 'sar'
          | 'aed'
          | 'pln'
        )
      | null;
    stripeUserId?: string | null;
    stripeAdminDashboard?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogo".
 */
export interface BrandLogo {
  imageUrl: number | Media;
  height?: number | null;
  width?: number | null;
  description?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  general?:
    | T
    | {
        title?: T;
        description?: T;
        faviconUrl?: T;
        ogImageUrl?: T;
        keywords?: T;
      };
  navbar?:
    | T
    | {
        logo?:
          | T
          | {
              imageUrl?: T;
              height?: T;
              width?: T;
            };
        menuLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  footer?:
    | T
    | {
        logo?:
          | T
          | {
              imageUrl?: T;
              height?: T;
              width?: T;
              description?: T;
            };
        footerLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              value?: T;
              id?: T;
            };
        copyright?: T;
      };
  redirectionLinks?:
    | T
    | {
        blogLink?: T;
        productLink?: T;
        authorLink?: T;
        tagLink?: T;
      };
  monetization?:
    | T
    | {
        adSenseId?: T;
        measurementId?: T;
      };
  stripeConnect?:
    | T
    | {
        country?: T;
        currency?: T;
        stripeUserId?: T;
        stripeAdminDashboard?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}